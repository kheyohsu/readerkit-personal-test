spring.profiles.active=dev

#server.address=localhost
server.address=127.0.0.1
server.port=8080

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://bacb485acbe433:31fe11e1@us-cdbr-east-05.cleardb.net/heroku_7d809eeb6a56461?reconnect=true
spring.datasource.username=bacb485acbe433
spring.datasource.password=31fe11e1


# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Mybatis 설정
mybatis.mapper-locations:classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

# tyhmeleaf 설정
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html